/* ===========================================================================
Z!NG • EMOTIONAL JOURNEY • styles.css (clean)
- Layout 3 colonne, SVG centrale responsive, due chart a destra.
- Legenda fissata in basso nella colonna sinistra.
- Nessuna scrollbar (né orizzontale né verticale).
============================================================================ */

:root {
  --bg: #e3e3e3;
  --panel: #e3e3e3;
  --text: #373737;
  --muted: #373737;
  --axis: #b0b0b0;
  --noData: #2a2f3b;
  --barHeight: 40px; /* altezza bottombar fissa */
  --barBg: #0c0e12;
  --barBorder: #1a1f29;
  --divider: #b0b0b0;
  --grid: #b0b0b0;
  --icon-color: #373737; /* tema chiaro */
}

* {
  box-sizing: border-box;
}
html,
body {
  height: 100%;
  margin: 0;
}

body {
  background: var(--bg);
  color: var(--text);
  font: 14px/1.4 system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue",
    Arial;
  /* IMPORTANT: niente padding-bottom qui, ci pensa .layout a sottrarre la bottombar */
  overflow-x: hidden; /* cintura di sicurezza anti-scroll orizzontale */
}

/* ------- 3-column layout ------- */
.layout {
  display: grid;
  /* minmax(0, ...) evita “spanciamenti” orizzontali */
  grid-template-columns: minmax(0, 9fr) minmax(0, 22fr) minmax(0, 9fr);
  gap: 16px;

  /* Sottraiamo la bottombar fissa: niente overflow verticale */
  height: calc(100vh - var(--barHeight));

  padding: 16px;
  /* niente padding-bottom aggiuntivo: causava overflow verticale */
}

/* Evita che i figli del grid creino overflow orizzontale */
.layout > * {
  min-width: 0;
}

.col {
  background: none;
  border-radius: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  min-height: 0; /* fondamentale per contenuti flessibili */
}

/* ------- left column ------- */
.col-left {
  display: flex;
  flex-direction: column;
  min-height: 0;
}
.col-left h1 {
  font-size: 48px;
  line-height: 1.2;
  margin: 0 0 8px 0;
}
.col-left small {
  font-size: 28px;
  font-weight: 400;
}
.col-left .intro {
  font-size: 16px;
  color: var(--text);
  margin-bottom: 8px;
}

/* howto: icone uniformi + separatore tra 2ª e 3ª voce */
.howto {
  list-style: none;
  margin: 12px 0;
  padding: 0;
  display: grid;
  gap: 16px;
}
.howto li {
  display: flex;
  align-items: center;
  gap: 12px;
}
.howto img {
  width: 28px;
  height: 28px;
  object-fit: contain;
  flex-shrink: 0;
}
.howto li:nth-child(3) {
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  padding-top: 14px;
}

.helper {
  margin: 6px 0 0;
  opacity: 0.9;
}

.emotions {
  margin-top: auto;
} /* pin legend at the bottom */
.emotions h3 {
  font-size: 20px;
  margin: 12px 0 6px;
}
.emotions ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  gap: 6px;
}
.emotions li {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 20px;
  cursor: pointer;
}
.emotions li.active {
  font-weight: 700;
  color: var(--text);
}
.emotions i {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: var(--c);
  display: inline-block;
}

/* ------- center column (SVG 9 rooms) ------- */
.col-center {
  background: var(--panel);
  min-height: 0;
}
.center-map {
  flex: 1;
  min-height: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
}
.center-map svg {
  display: block;
  width: 100%;
  height: auto;
  max-height: 100%;
  object-fit: contain;
}

.room-inner {
  transition: fill 0.3s ease;
}
[id^="inner-"] {
  stroke: #fff;
  stroke-width: 2px;
  vector-effect: non-scaling-stroke;
}

/* ------- right column: two timelines side-by-side ------- */
.col-right {
  min-height: 0;
}

.chart-grid {
  display: grid;
  grid-template-columns: 1fr 1fr; /* simmetriche */
  gap: 16px;
  width: 100%;
  height: 100%;
  min-height: 0;
}
.chart-block {
  display: flex;
  flex-direction: column;
  min-height: 0;
}
.chart-header {
  display: flex;
  flex-direction: column;
  gap: 4px;
  font-size: 13px;
  margin-bottom: 8px;
}
.chart-wrapper {
  position: relative;
  flex: 1;
  min-height: 1px;
}
.chart-wrapper svg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}
.chart-footer {
  margin-top: 8px;
  font-weight: 600;
  font-size: 14px;
}
.chart-footer span {
  font-size: 18px;
  font-weight: 800;
  margin-right: 4px;
}

/* axes & bars */
.axis {
  color: var(--axis);
}
.axis text {
  fill: var(--axis);
  font-size: 12px;
}
.axis path,
.axis line {
  stroke: var(--axis);
  stroke-width: 1;
  shape-rendering: crispEdges;
}
.slot-bars .bar {
  rx: 6px;
  ry: 6px;
}
.bar.dimmed {
  opacity: 0.2;
  transition: opacity 0.3s;
}

/* ------- bottom bar (fissa) ------- */
.bottombar {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  height: var(--barHeight);
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
  padding: 0 16px;
  background: rgba(255, 255, 255, 0.15);
  border-top: 1px solid var(--divider);
  color: var(--text);
  z-index: 100;
}
.bottombar .b-left {
  justify-self: start;
  font-size: 12px;
}
.bottombar .b-center {
  justify-self: center;
}
.bottombar .b-right {
  justify-self: end;
}

.lang-toggle {
  background: none !important;
  border: none !important;
  border-radius: 0 !important;
  padding: 0 !important;
  color: var(--text) !important;
  font-weight: 600; /* come "Ultimo aggiornamento" */
  display: inline; /* niente pillola, solo testo */
}
.lang-toggle .lang-it,
.lang-toggle .lang-en {
  opacity: 0.55;
  font-weight: 700;
  letter-spacing: 0.2px;
}
.lang-toggle .divider {
  opacity: 0.35;
}
.lang-toggle .lang-it.active,
.lang-toggle.is-eng .lang-en {
  opacity: 1;
  color: var(--text);
}
.lang-toggle.is-eng .lang-it {
  opacity: 0.55;
}

/* ------- responsive tweak ------- */
/* ---- Colonna sinistra: layout stabile, legenda in basso ---- */
.col-left {
  display: flex;
  flex-direction: column;
  min-height: 0; /* evita overflow del contenitore */
  gap: 12px; /* spazio uniforme tra blocchi */
}

/* header + intro + howto + helper scorrono naturalmente */
.col-left > * {
  min-height: 0;
}

/* legenda sempre in basso */
.col-left .emotions {
  margin-top: auto;
  margin-bottom: 0;
}

/* how-to: icone uguali e testi allineati senza accavallarsi */
.howto {
  list-style: none;
  margin: 0;
  padding: 0;
  display: grid;
  gap: 14px;
}
.howto li {
  display: flex;
  align-items: flex-start;
  gap: 12px;
}
.howto img {
  width: 28px;
  height: 28px;
  object-fit: contain;
  flex: 0 0 28px;
  filter: brightness(0) invert(1);
}
.howto li:nth-child(3) {
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  padding-top: 14px;
}

/* legenda: elenco pulito */
.emotions h3 {
  margin: 0 0 8px;
}
.emotions ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: grid;
  gap: 8px;
}
.emotions li {
  display: flex;
  align-items: center;
  gap: 8px;
}
.emotions i {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: var(--c);
  flex: 0 0 12px;
}

/* ---- (OPZIONALE) Applica le proporzioni Figma SOLO su viewport alti ----
   Usiamo min-height in % per non schiacciare il contenuto.
   Se l'altezza è minore, si torna al flusso naturale sopra.
*/
@media (min-height: 920px) {
  .col-left {
    gap: 12px;
  }
  .col-left h1 {
    min-height: 10.36%;
  } /* logo+title */
  .col-left .intro {
    min-height: 4.65%;
  }
  .col-left .howto {
    min-height: 17.75%;
  }
  .col-left .helper {
    min-height: 6.98%;
  }
}

/* --- Colonna destra: contenuto grafici largo 325 su 405 => 80.25% --------- */
.col-right .charts {
  width: 80.25%;
  margin-left: auto; /* allinea a destra come nel mock */
}
.col-right .days-header {
  width: 80.25%;
  margin-left: auto;
}
.howto li:nth-child(3) {
  border-top: 1px solid #b0b0b0;
  padding-top: 14px;
}
.howto + p {
  border-top: 1px solid #b0b0b0;
  padding-top: 14px;
}

/* ===== Smooth theme transitions ===== */
html,
body,
.layout,
.col-left,
.col-center,
.col-right,
.bottombar,
.axis text,
.axis path,
.axis line,
.grid line {
  transition: background-color 0.35s ease, stroke 0.35s ease; /* niente color */
}

/* Smooth per SVG */
.col-center svg * {
  transition: fill 0.35s ease, stroke 0.35s ease;
}

/* --- Niente transizioni sui testi --- */
.col-center svg text,
.axis text,
h1,
h2,
h3,
h4,
h5,
h6,
p,
li,
span,
small,
a,
button,
label,
input,
textarea {
  transition: none !important;
}

/* ===== Dark theme (activate via body[data-theme="dark"]) ===== */
body[data-theme="dark"] {
  --bg: #260f30;
  --text: #ffffff;
  --divider: #67576e;
  --axis: #67576e;
  --grid: #67576e;
  --panel: #260f30; /* central column panel in dark */
  --icon-color: #ffffff; /* tema scuro */
}

/* ===== Left column proportions (Option B: baseline grid unchanged) ===== */
:root {
  /* From Figma @1920px, normalized to % of the left column */
  --leftcol-icon: 21.5%;
  --leftcol-text: 61.2%;
  --leftcol-gap: 5.77%; /* middle empty space (between icon and text) */
  --leftcol-pad: 5.77%; /* inner side paddings (left & right) */
}

/* Keep the existing grid-template-columns as-is; we only change the internal layout */
.col-left {
  /* distribute the remaining "empty" area to the sides so it inherits the background */
  padding-left: var(--leftcol-pad);
  padding-right: var(--leftcol-pad);
}

/* Each how-to row becomes a 2-col grid: [icon | text] with a % gap */
.col-left .howto {
  list-style: none;
  margin: 0;
  padding: 0;
  display: grid;
  row-gap: clamp(8px, 1.2vh, 16px);
}

.col-left .howto > li {
  display: grid;
  grid-template-columns: var(--leftcol-icon) var(--leftcol-text);
  column-gap: var(--leftcol-gap);
  align-items: start;
}

/* Icons scale with the column, capped to the mock value at 1920px */
.col-left .howto > li img,
.col-left .howto > li svg {
  display: block;
  width: 100%;
  height: auto;
  max-width: 87px; /* mock 87px at 405px inner width */
}

/* Text block simply fills its track; no transitions on text */
.col-left .howto > li span {
  display: block;
  line-height: 1.25;
  transition: none !important;
}
/* === Uniforma dimensioni icone e centra verticalmente testo === */

/* === Icone: stessa dimensione visiva, testo centrato === */
:root {
  --howto-icon: clamp(44px, 5.5vh, 56px);
} /* regola qui la “taglia” target */

/* ogni riga: [icona | testo]; centro verticalmente */
.col-left .howto > li {
  display: grid;
  grid-template-columns: var(--leftcol-icon) var(--leftcol-text);
  column-gap: var(--leftcol-gap);
  align-items: center;
  min-block-size: var(
    --howto-icon
  ); /* l’altezza minima della riga segue l’icona */
}

/* la cella dell’icona diventa un QUADRATO fisso e centra il contenuto */
.col-left .howto > li > :first-child {
  inline-size: var(--howto-icon);
  block-size: var(--howto-icon);
  display: flex;
  align-items: center;
  justify-content: center;
  /* facoltativo per debug:
  outline: 1px dashed red;
  */
}

/* l’icona (svg/img) riempie la cella ma senza deformarsi */
.col-left .howto > li > :first-child svg,
.col-left .howto > li > :first-child img {
  max-inline-size: 100%;
  max-block-size: 100%;
  width: auto;
  height: auto;
}

/* stroke coerente quando scala */
.col-left .howto > li > :first-child svg * {
  vector-effect: non-scaling-stroke;
}

/* testo: centrato verticalmente tramite align-items sopra; niente transizioni */
.col-left .howto > li span {
  transition: none !important;
}
.col-left .howto svg {
  color: var(--icon-color); /* currentColor prenderà questo */
}
:root {
  --icon-color: #373737; /* tema chiaro */
}
body[data-theme="dark"] {
  --icon-color: #ffffff; /* tema scuro */
}

.icon {
  width: 28px; /* regola in base alla dimensione che vuoi */
  height: 28px;
  background-color: var(--icon-color);
  -webkit-mask: no-repeat center / contain;
  mask: no-repeat center / contain;
  display: inline-block;
  flex: 0 0 28px; /* mantiene la larghezza fissa nella griglia */
}

/* specifica quale svg usare */
.icon-lanterna {
  -webkit-mask-image: url("/assets/icons/Lanterna.svg");
  mask-image: url("/assets/icons/Lanterna.svg");
}
.icon-stanza {
  -webkit-mask-image: url("/assets/icons/Stanza.svg");
  mask-image: url("/assets/icons/Stanza.svg");
}
.icon-touch-stanza {
  -webkit-mask-image: url("/assets/icons/Touch stanza.svg");
  mask-image: url("/assets/icons/Touch stanza.svg");
}
.icon-touch-emozione {
  -webkit-mask-image: url("/assets/icons/Touch emozione.svg");
  mask-image: url("/assets/icons/Touch emozione.svg");
}
